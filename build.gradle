plugins {
    id 'idea'
    id "dev.architectury.loom" version "1.6-SNAPSHOT"
}

version = "${mc_version}-${verspec}.${verbuild}"
group = "${maven_group}"
base.archivesName = "${archive_base_name}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    mavenCentral()
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.neoforged.net/releases/" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://dvs1.progwml6.com/files/maven/" }
    maven { url = "https://maven.blamejared.com/" }
    maven { url = "https://modmaven.dev" }
    maven { url = "https://maven.parchmentmc.org" }

    maven {
        url = "https://maven.pkg.github.com/texblock/PinIn"
        credentials {
            username = "TexBlock"
            // Read only token
            password = "ghp_" + "VOVRX4CXfrYPiltIE7dGr94iPMeZma0gp7uX"
        }
    }

}

loom {
    silentMojangMappingsLicense()
}

dependencies {
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.mc_version}:2024.04.14@zip")
    }

    minecraft "com.mojang:minecraft:${project.mc_version}"
    neoForge "net.neoforged:neoforge:${project.neoforge_version}"
    modImplementation "mezz.jei:jei-${project.mc_version}-neoforge:17.3.1.3"

    forgeRuntimeLibrary(implementation(include("com.github.towdium:PinIn:${verpinin}") { transitive = false }))
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

java {
    withSourcesJar()
}

tasks.register('generate', Exec) {
    commandLine 'python', 'generate.py'
}

compileJava.dependsOn generate

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}
