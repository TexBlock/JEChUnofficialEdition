plugins {
    id 'idea'
    id "dev.architectury.loom" version "1.7-SNAPSHOT"
}

version = "${mc_version}-${verspec}.${verbuild}"
group = "${maven_group}"
base.archivesName = "${archive_base_name}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    mavenCentral()
    maven { url = "https://maven.neoforged.net/releases/" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://dvs1.progwml6.com/files/maven/" }
    maven { url = "https://maven.blamejared.com/" }
    maven { url = "https://modmaven.dev" }
    maven { url = "https://maven.parchmentmc.org" }

}

configurations {
    shade
    implementation.extendsFrom shade
}

loom {
    silentMojangMappingsLicense()
}


dependencies {
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.mc_version}:2024.04.14@zip")
    }

    minecraft "com.mojang:minecraft:${project.mc_version}"
    neoForge "net.neoforged:neoforge:${project.neoforge_version}"
    modImplementation "mezz.jei:jei-${project.mc_version}-neoforge:17.3.1.3"
    forgeRuntimeLibrary(implementation(include("com.github.TexBlock:PinIn:${verpinin}") { transitive = false }))
}

test {
    useJUnitPlatform()
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title"     : 'Just Enough Characters Unofficial NeoForge Edition',
                "Specification-Vendor"    : 'TexTrue',
                "Specification-Version"   : "${verspec}",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${verspec}.${verbuild}",
                "Implementation-Vendor"   : 'Towdium',
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

task generate(type: Exec) {
    commandLine 'python', 'generate.py'
}

compileJava.dependsOn generate

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}
